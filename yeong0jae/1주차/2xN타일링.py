# 문제를 풀 당시 생각 과정을 기입
'''
2xn 크기의 직사각형에 1x2, 2x1 타일로 채우는 경우의 수를 구해야한다.
n이 입력으로 주어지고 그에 따라 풀이하여 알맞은 결과값을 출력하는 것이 목표이다.

로직을 짜야 하므로 n이 1일때, n이 2일때 ... 어떻게 경우의 수가 구해지는지 이해하려 했다.
n이 1인 경우, 2x1을 두는 1가지.
n이 2인 경우, 2x1, 2x1 과 1x2 1x2를 두는 2가지.
n이 3인 경우, 1x2 1x2 1x2, 2x1 2x1 1x2, 1x2 1x2 2x1 로 3가지
n이 4인 경우, n이 5인 경우까지 그림을 직접 그려보다 보면

타일을 쌓을 때는 1x2로 시작하는 경우와, 2x1 두개로 시작하는 경우로 나뉜다는 걸 알 수 있다.
그리고 1x2로 시작하는 경우는 바로 직전의 n에 따른 결과값을,
2x1로 시작하는 경우는 두번째 전의 n에 따른 결과값이 재사용 된다.

이로서 점화식이 완성되고 dp 문제라는 걸 알 수 있다.
n이 증가할 수록 타일을 쌓아가는 행위를 할 때, 이전 결과값을 재사용할 수 있는지(dp인지) 의심할 수 있어야 한다.
'''

# 풀이 코드 기입
n = int(input())

d = [0] * 1001

d[0] = 0
d[1] = 1
d[2] = 2

for i in range(3, 1001):
    d[i] = d[i-1] + d[i-2]

print(d[n] % 10007)

# 피드백 후 정리(알게된 점, 포인트 등)
'''
문제를 보고 어떻게 접근해야 할 지 모르겠다면 무조건 완전 탐색으로 먼저 접근해본다.
완전 탐색으로 접근해서 생각해봐야 문제가 이해되고
dp인지, 어떤 또 다른 접근을 할 수 있을지 감이 온다.
'''