# 문제를 풀 당시 생각 과정을 기입
'''
n이 1개면 2*1크기 직사각형(1*2)
n이 2개면 2*2크기 직사각형(1*2, 2*1)
n이 3개면 2*3크기 직사각형(1*2 3개 or 2*1 1개 1*2 2개 or 1*2 2개 2*1 1개) => 3가지 경우의 수가 있다.
n이 4개면 2*4크기 직사각형(1*2 4개 or 2*1 2개 1*2 2개 or 1*2 2개 1*2 1개 or 2*1 1개 1*2 2개 or 2*1 2개 1*2 1개) => 5가지 경우의 수가 있다.
n이 5개면 2*5크기 직사각형(1*2 5개 or 2*1 3개 1*2 2개 or 1*2 3개 1*2 1개 or 2*1 1개 1*2 3개 or 2*1 2개 1*2 2개 or 1*2 2개 1*2 2개 or 2*1 1개 1*2 2개 1*2 1개) => 8가지 경우의 수가 있다.

위아래로 두칸 => 2*1직사각형
옆으로 두칸 => 1*2직사각형
따라서 n이 1일때는 1, n이 2일때는 2, n이 3일때는 3, n이 4일때는 5, n이 5일때는 8이다.

'''

# 풀이 코드 기입
n = int(input())
if n == 0:
    print(1 % 10007)  # 2x0 크기의 직사각형을 채우는 방법은 1가지
elif n == 1:
    print(1 % 10007)  # 2x1 크기의 직사각형을 채우는 방법은 1가지
else:
    dp = [0] * (n+1)
    dp[1] = 1
    dp[2] = 2
    for i in range(3, n+1):
        dp[i] = dp[i-1] + dp[i-2]

    print(dp[n] % 10007) # 10007로 나눈 나머지 출력 조건


# 피드백 후 정리(알게된 점, 포인트 등)
'''
길이가 1과 2일때는 각각 방법이 1,2가 있다.
마지막에 1x2 타일 하나를 놓는 경우 : 남은 부분은 2x(n-1) 직사각형을 채우는 방법과 같다.
마지막에 2x1 타일 하나를 놓는 경우 : 남은 부분은 2x(n-2) 직사각형을 채우는 방법과 같다.
만약 n=3이면
    1x2 타일을 하나 놓는 경우는 앞에 남은 것이 2x2 직사각형
    2x1 타일을 두개 놓는 경우는 앞에 남은 것이 2x1 직사각형
그 이상일때 가로의 길이가 n이라면 n-1일때의 경우의 수와 n-2일때의 경우의 수를 더하면 된다.
f(n) = f(n-1) + f(n-2) 이다. = 피보나치 수열

점화식이라는 표현에 대해서 처음 알았다. 
이를 동적 계획법이라고 하며 큰문제를 작은 문제로 나누어 푸는 방법이라고 한다.
'''